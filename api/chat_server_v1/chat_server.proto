syntax="proto3";

package api.chat_server_v1;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package="github.com/markgenuine/chat-server/pkg/chat_server_v1;chat_server_v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Chat-Server API"
    version: "1.0.0"
    contact: {
      name: "Konstantin Ivanov"
      email: "mrkgeniy@gmail.com"
    };
  };

  host : "localhost:50662",
  schemes: HTTP,
  schemes: HTTPS,
  consumes: "application/json",
  produces: "application/json",
};

service ChatServerV1 {

  rpc Create(CreateRequest) returns(CreateResponse){
    option (google.api.http) = {
      post: "/chat_server/v1"
      body: "*"
    };
  }

  rpc Delete(DeleteRequest) returns(google.protobuf.Empty){
    option (google.api.http) = {
      delete: "/chat_server/v1"
    };
  }

  rpc SendMessage(SendMessageRequest) returns(google.protobuf.Empty){
    option (google.api.http) = {
      post: "/chat_server/v1/send-message"
      body: "*"
    };
  }
}

message CreateRequest {
  repeated string usernames = 1 [(validate.rules).repeated = {unique: true}];
}

message CreateResponse {
  int64 id = 1;
}

message DeleteRequest {
  int64 id = 1  [(validate.rules).int64.gt = 0];
}

message SendMessageRequest {
  int64 chatId = 1 [(validate.rules).int64.gt = 0];
  string from = 2; //TODO ??? int or string [(validate.rules).int64.gt = 0];
  string text = 3 [(validate.rules).string = {min_len: 1, max_len: 3000}];
  google.protobuf.Timestamp timestamp = 4;
}